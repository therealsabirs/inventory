/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.inventoryv1;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;



/**
 *
 * @author Sabir Shaikh
 */
public class addemployee extends javax.swing.JFrame {

    /**
     * Creates new form addemployee
     */
    public addemployee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        eid = new javax.swing.JTextField();
        etype = new javax.swing.JComboBox<>();
        doj = new com.toedter.calendar.JDateChooser();
        month = new javax.swing.JComboBox<>();
        designation = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        lmake = new javax.swing.JTextField();
        lsr = new javax.swing.JTextField();
        hmodel = new javax.swing.JTextField();
        hsr = new javax.swing.JTextField();
        yubikey = new javax.swing.JTextField();
        btadd = new javax.swing.JButton();
        bthome = new javax.swing.JButton();
        btlogout = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        btfind = new javax.swing.JButton();
        btadd1 = new javax.swing.JButton();
        btadd2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Employee Details");

        jLabel2.setText("Name:");
        jLabel2.setAlignmentX(0.5F);

        jLabel3.setText("Employee ID:");
        jLabel3.setAlignmentX(0.5F);

        jLabel4.setText("Employee Type:");
        jLabel4.setAlignmentX(0.5F);

        jLabel5.setText("Date of Joining:");
        jLabel5.setAlignmentX(0.5F);

        jLabel6.setText("Month:");
        jLabel6.setAlignmentX(0.5F);

        jLabel7.setText("Designation:");
        jLabel7.setAlignmentX(0.5F);

        jLabel8.setText("Mobile No:");
        jLabel8.setAlignmentX(0.5F);

        jLabel9.setText("Email ID:");
        jLabel9.setAlignmentX(0.5F);

        jLabel10.setText("Laptop Make:");
        jLabel10.setAlignmentX(0.5F);

        jLabel11.setText("Laptop SR:");
        jLabel11.setAlignmentX(0.5F);

        jLabel12.setText("Headset Model:");
        jLabel12.setAlignmentX(0.5F);

        jLabel13.setText("Headset SR:");
        jLabel13.setAlignmentX(0.5F);

        jLabel14.setText("Yubi Key:");
        jLabel14.setAlignmentX(0.5F);

        etype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Permanent", "Contractor" }));

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        btadd.setText("Add Employee");
        btadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddActionPerformed(evt);
            }
        });

        bthome.setText("Home");
        bthome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthomeActionPerformed(evt);
            }
        });

        btlogout.setText("Log Out");
        btlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlogoutActionPerformed(evt);
            }
        });

        jLabel15.setText("Status:");
        jLabel15.setAlignmentX(0.5F);

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", " " }));

        btfind.setText("Find");
        btfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btfindActionPerformed(evt);
            }
        });

        btadd1.setText("Update Employee");
        btadd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btadd1ActionPerformed(evt);
            }
        });

        btadd2.setText("Delete Employee");
        btadd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btadd2ActionPerformed(evt);
            }
        });

        jButton1.setText("Export Employee");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel12)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lmake, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lsr, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yubikey, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hmodel, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hsr, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(month, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(doj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(etype, javax.swing.GroupLayout.Alignment.LEADING, 0, 135, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btadd2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btadd1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(btadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eid, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(btfind)
                        .addGap(70, 70, 70))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(bthome, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(btlogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bthome, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btfind)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(eid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(etype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lmake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(lsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(hmodel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(hsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btadd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btadd1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btadd2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(yubikey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(558, 521));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddActionPerformed
        // TODO add your handling code here:

        //Database connection
        try {
            //Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/inventory", "sabir", "sabir");
            PreparedStatement pst;

            //Fetch data
            String Name = name.getText();
            String Eid = eid.getText();

            String Status = (String) status.getSelectedItem();
            String Etype = (String) etype.getSelectedItem();

            java.util.Date DOJ = doj.getDate();
            String Month = (String) month.getSelectedItem();
            String Designation = designation.getText();
            String Mobile = mobile.getText();
            String Email = email.getText();
            String Lmake = lmake.getText();
            String Lsr = lsr.getText();
            String Hmodel = hmodel.getText();
            String Hsr = hsr.getText();
            String Yubi = yubikey.getText();

            //SQL Connections
            String sql = "Insert into \"employee\" (\"Status\", \"EmployeeName\", \"EmployeeID\", \"EmployeeType\","
                    + "\"DOJ\", \"Month\", \"Designation\", \"MobileNo\", \"EmailID\", \"LaptopMake\", \"LaptopSR\", \"HeadsetModel\", "
                    + "\"HeadsetSR\", \"YubiKey\") Values('" + Status + "','" + Name + "','" + Eid + "','" + Etype + "','" + DOJ + "','" + Month + "','" + Designation + "','" + Mobile + "','" + Email + "','" + Lmake + "','" + Lsr + "','" + Hmodel + "','" + Hsr + "','" + Yubi + "')";

            pst = con.prepareStatement(sql);
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(rootPane, "Employee Added Successfully!!", "Success", JOptionPane.MESSAGE_PROPERTY);
            JOptionPane.showMessageDialog(rootPane, "Employee Added Successfully!");
            clearForm();

        } catch (SQLException E) {
            JOptionPane.showMessageDialog(rootPane, E, "Error", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btaddActionPerformed

    private void btlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlogoutActionPerformed
        // TODO add your handling code here:

        Home ob = new Home();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btlogoutActionPerformed

    private void bthomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthomeActionPerformed

        // TODO add your handling code here:
        adminMainform ob = new adminMainform();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bthomeActionPerformed

    private void btfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btfindActionPerformed
        // TODO add your handling code here:

        try {
            //Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/inventory", "sabir", "sabir");
            PreparedStatement pst;
            String Eid = eid.getText();

            String sql = "select *from employee where \"EmployeeID\"=?";
            pst = con.prepareStatement(sql);
            pst.setString(1, Eid);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                status.setSelectedItem(rs.getObject("Status"));
                name.setText(rs.getString("EmployeeName"));
                etype.setSelectedItem(rs.getObject("EmployeeType"));
                doj.setDate(rs.getDate("DOJ"));
                month.setSelectedItem(rs.getObject("Month"));
                designation.setText(rs.getString("Designation"));
                mobile.setText(rs.getString("MobileNo"));
                email.setText(rs.getString("EmailID"));
                lmake.setText(rs.getString("LaptopMake"));
                lsr.setText(rs.getString("LaptopSR"));
                hmodel.setText(rs.getString("HeadsetModel"));
                hsr.setText(rs.getString("HeadsetSR"));
                yubikey.setText(rs.getString("YubiKey"));

            }

        } catch (Exception E) {
            JOptionPane.showMessageDialog(rootPane, E, "Error", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_btfindActionPerformed

    private void btadd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btadd1ActionPerformed
        // TODO add your handling code here:

        try {
            //Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/inventory", "sabir", "sabir");
            PreparedStatement pst;

            //Fetch data
            String Name = name.getText();
            String Eid = eid.getText();

            String Status = (String) status.getSelectedItem();
            String Etype = (String) etype.getSelectedItem();

            java.util.Date DOJ = doj.getDate();
            String Month = (String) month.getSelectedItem();
            String Designation = designation.getText();
            String Mobile = mobile.getText();
            String Email = email.getText();
            String Lmake = lmake.getText();
            String Lsr = lsr.getText();
            String Hmodel = hmodel.getText();
            String Hsr = hsr.getText();
            String Yubi = yubikey.getText();

            //SQL Connections
            String sql = "Update \"employee\" SET \"Status\"='" + Status + "', \"EmployeeName\"='" + Name + "',\"EmployeeType\"='" + Etype + "',"
                    + "\"DOJ\"='" + DOJ + "', \"Month\"='" + Month + "', \"Designation\"='" + Designation + "', \"MobileNo\"='" + Mobile + "', \"EmailID\"='" + Email + "', \"LaptopMake\"='" + Lmake + "', \"LaptopSR\"='" + Lsr + "', \"HeadsetModel\"='" + Hmodel + "', "
                    + "\"HeadsetSR\"='" + Hsr + "', \"YubiKey\"='" + Yubi + "' where \"EmployeeID\"='" + Eid + "'";

            pst = con.prepareStatement(sql);
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(rootPane, "Employee Added Successfully!!", "Success", JOptionPane.MESSAGE_PROPERTY);
            JOptionPane.showMessageDialog(rootPane, "Employee Update Successfully!");
            clearForm();

        } catch (SQLException E) {
            JOptionPane.showMessageDialog(rootPane, E, "Error", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btadd1ActionPerformed

    private void btadd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btadd2ActionPerformed
        // TODO add your handling code here:

        try {
            //Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/inventory", "sabir", "sabir");
            PreparedStatement pst;
            String Eid = eid.getText();
            String sql = "Delete from employee where \"EmployeeID\"='" + Eid + "'";
            pst = con.prepareStatement(sql);
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(rootPane, "Employee Added Successfully!!", "Success", JOptionPane.MESSAGE_PROPERTY);
            JOptionPane.showMessageDialog(rootPane, "Employee Delete Successfully!");
            clearForm();
        } catch (Exception E) {
            JOptionPane.showMessageDialog(rootPane, E, "Error", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_btadd2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {

            PrintWriter pw = new PrintWriter(new File("C:\\Users\\Dell\\Desktop\\Employee_Details.csv"));
            StringBuilder sb = new StringBuilder();

            //Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/inventory", "sabir", "sabir");
            PreparedStatement pst;

            String query = "select * from employee";
            pst = con.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
                sb.append("Status");
                sb.append(",");
                sb.append("Employee Name");
                sb.append(",");
                sb.append("Employee ID");
                sb.append(",");
                sb.append("Employee Type");
                sb.append(",");
                sb.append("DOJ");
                sb.append(",");
                sb.append("Month");
                sb.append(",");
                sb.append("Designation");
                sb.append(",");
                sb.append("Mobile No");
                sb.append(",");
                sb.append("Email ID");
                sb.append(",");
                sb.append("Laptop Make");
                sb.append(",");
                sb.append("Laptop SR");
                sb.append(",");
                sb.append("Headset Model");
                sb.append(",");
                sb.append("Headset SR");
                sb.append(",");
                sb.append("Yubi Key");
                sb.append("\r\n");
            
            while (rs.next()) {
                sb.append(rs.getString("Status"));
                sb.append(",");
                sb.append(rs.getString("EmployeeName"));
                sb.append(",");
                sb.append(rs.getString("EmployeeID"));
                sb.append(",");
                sb.append(rs.getString("EmployeeType"));
                sb.append(",");
                sb.append(rs.getString("DOJ"));
                sb.append(",");
                sb.append(rs.getString("Month"));
                sb.append(",");
                sb.append(rs.getString("Designation"));
                sb.append(",");
                sb.append(rs.getString("MobileNo"));
                sb.append(",");
                sb.append(rs.getString("EmailID"));
                sb.append(",");
                sb.append(rs.getString("LaptopMake"));
                sb.append(",");
                sb.append(rs.getString("LaptopSR"));
                sb.append(",");
                sb.append(rs.getString("HeadsetModel"));
                sb.append(",");
                sb.append(rs.getString("HeadsetSR"));
                sb.append(",");
                sb.append(rs.getString("YubiKey"));
                sb.append("\r\n");
            }

            pw.write(sb.toString());
            pw.close();
            JOptionPane.showMessageDialog(rootPane, "Employee Data Successfully Export!");
            System.out.println("finished");
        } catch (Exception E) {
            JOptionPane.showMessageDialog(rootPane, E, "Error", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_jButton1ActionPerformed
    void clearForm() {
        name.setText("");
        eid.setText("");
        designation.setText("");
        mobile.setText("");
        email.setText("");
        lmake.setText("");
        lsr.setText("");
        hmodel.setText("");
        hsr.setText("");
        yubikey.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addemployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btadd;
    private javax.swing.JButton btadd1;
    private javax.swing.JButton btadd2;
    private javax.swing.JButton btfind;
    private javax.swing.JButton bthome;
    private javax.swing.JButton btlogout;
    private javax.swing.JTextField designation;
    private com.toedter.calendar.JDateChooser doj;
    private javax.swing.JTextField eid;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> etype;
    private javax.swing.JTextField hmodel;
    private javax.swing.JTextField hsr;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lmake;
    private javax.swing.JTextField lsr;
    private javax.swing.JTextField mobile;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JTextField name;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField yubikey;
    // End of variables declaration//GEN-END:variables
}
